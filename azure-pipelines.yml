variables:
  - name: _BuildConfig
    value: Release
  - name: _TeamName
    value: OrchardCoreCms
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: true
  - name: _PublishUsingPipelines
    value: true
  - name: _DotNetArtifactsCategory
    value: ORCHARDCOREMODULES

trigger:
  batch: true
  branches:
    include:
    - master
    - release/*

pr:
  autoCancel: false
  branches:
    include:
    - '*'

resources:
  containers:
  - container: LinuxContainer
    image: microsoft/dotnet-buildtools-prereqs:ubuntu-14.04-cross-0cd4667-20170319080304

stages:
- stage: build
  displayName: Build
  jobs:
  - template: /eng/common/templates/jobs/jobs.yml
    parameters:
      enablePublishBuildArtifacts: true
      enablePublishTestResults: true
      enablePublishBuildAssets: true
      enablePublishUsingPipelines: ${{ variables._PublishUsingPipelines }}
      helixRepo: alexbocharov/OrchardCore.BasicAuthentication
      jobs:
      - job: Windows_NT
        pool:
          name: Hosted VS2017
        variables:
        - _Script: eng\common\cibuild.cmd
        - _ValidateSdkArgs: ''
        - _BuildArgs: ''

        # Only enable publishing in non-public, non PR scenarios.
        - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
          - _BuildArgs: /p:DotNetSignType=$(_SignType) 
                                /p:TeamName=$(_TeamName) 
                                /p:Sign=false
                                /p:DotNetPublishUsingPipelines=$(_PublishUsingPipelines)
                                /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
        strategy:
          matrix:
            ${{ if in(variables['Build.Reason'], 'PullRequest') }}:
              Build_Debug:
                _BuildConfig: Debug
                _PublishType: none
                _SignType: test
                _BuildArgs:

            Build_Release:
              _BuildConfig: Release
              # PRs or external builds are not signed.
              ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
                _PublishType: none
                _SignType: test
                _BuildArgs: $(_BuildArgs)
              ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
                _SignType: real
                _BuildArgs: $(_BuildArgs)
        steps:
        - checkout: self
          clean: true
        # Use utility script to run script command dependent on agent OS.
        - script: $(_Script)
            -configuration $(_BuildConfig) 
            -prepareMachine
            $(_BuildArgs)
            $(_ValidateSdkArgs)
          displayName: Windows Build / Publish
        - task: NuGetCommand@2
          displayName: Publish Packages
          inputs:
            command: 'push'
            packagesToPush: '$(Build.SourcesDirectory)/artifacts/packages/**/*.nupkg;!$(Build.SourcesDirectory)/artifacts/packages/**/*.symbols.nupkg'
            nuGetFeedType: 'external'
            publishFeedCredentials: 'MyGet'

      - job: OSX
        pool:
          name: Hosted macOS
        strategy:
          matrix:
            ${{ if in(variables['Build.Reason'], 'PullRequest') }}:
              debug_configuration:
                _BuildConfig: Debug
            release_configuration:
              _BuildConfig: Release
        steps:
        - checkout: self
          clean: true
        - script: eng/common/cibuild.sh
            --configuration $(_BuildConfig)
            --prepareMachine
          name: Build
          displayName: Build
          condition: succeeded()
          
      - job: Linux
        pool:
          name: Hosted Ubuntu 1604
        container: LinuxContainer
        strategy:
          matrix:
            ${{ if in(variables['Build.Reason'], 'PullRequest') }}:
              debug_configuration:
                _BuildConfig: Debug
            release_configuration:
              _BuildConfig: Release
        steps:
        - checkout: self
          clean: true
        - script: eng/common/cibuild.sh
            --configuration $(_BuildConfig)
            --prepareMachine
          name: Build
          displayName: Build
          condition: succeeded()

- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
  - template: eng\common\templates\post-build\post-build.yml
    parameters:
      # Symbol validation isn't being very reliable lately. This should be enabled back
      # once this issue is resolved: https://github.com/dotnet/arcade/issues/2871
      enableSymbolValidation: false