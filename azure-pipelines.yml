variables:
  - name: _BuildConfig
    value: Release
  - name: _TeamName
    value: OrchardCoreCms
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: true
  - name: _PublishUsingPipelines
    value: true
  - name: _DotNetArtifactsCategory
    value: ORCHARDCOREMODULES

# CI and PR triggers
trigger:
  batch: true
  branches:
    include:
    - master
    - release/*

pr:
  autoCancel: false
  branches:
    include:
    - '*'

jobs:
  - template: /eng/common/templates/job/job.yml
    parameters:
      enablePublishBuildArtifacts: true
      enablePublishUsingPipelines: $(_PublishUsingPipelines)
      helixRepo: alexbocharov/OrchardCore.BasicAuthentication
      name: Windows
      pool:
        name: Hosted VS2017
      variables:
      # Only enable publishing in official builds.
      - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
        - name: _OfficialBuildArgs
          value: /p:DotNetSignType=$(_SignType)
                  /p:TeamName=$(_TeamName)
                  /p:DotNetPublishUsingPipelines=$(_PublishUsingPipelines)
                  /p:DotNetArtifactsCategory=$(_DotNetArtifactsCategory)
                  /p:OfficialBuildId=$(BUILD.BUILDNUMBER)
      # else
      - ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
        - name: _OfficialBuildArgs
          value: ''
      strategy:
        matrix:
          ${{ if in(variables['Build.Reason'], 'PullRequest') }}:
            Debug:
              _BuildConfig: Debug
              _SignType: test
              _DotNetPublishToBlobFeed: false
              _BuildArgs:

          Release:
            _BuildConfig: Release
            # PRs or external builds are not signed.
            ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
              _SignType: test
              _DotNetPublishToBlobFeed: false
            ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
              _SignType: real
              _DotNetPublishToBlobFeed: true
              _BuildArgs: $(_OfficialBuildArgs)
      steps:
      - checkout: self
        clean: true
      - task: NuGetCommand@2
        displayName: 'Clear NuGet caches'
        condition: succeeded()
        inputs:
          command: custom
          arguments: 'locals all -clear'
      - script: eng\common\build.ps1 -restore -build -test -pack -publish -ci -configuration $(_BuildConfig) -prepareMachine $(_BuildArgs)
        displayName: Build and Publish
      - task: PublishBuildArtifacts@1
        displayName: Upload package artifacts
        condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false), eq(variables['_BuildConfig'], 'Release'))
        inputs:
          pathtoPublish: artifacts/packages/
          artifactName: artifacts
          artifactType: Container
          parallel: true